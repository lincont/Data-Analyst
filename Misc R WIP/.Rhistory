pf <- read.csv('C:\Users\lincolnt\Downloads\pseudo_facebook.tsv', sep = '\t')
pf <- read.csv('C\\:\Users\lincolnt\Downloads\pseudo_facebook.tsv', sep = '\t')
setwd('/users/lincolnt')
pf <- read.csv('../Downloads/pseudo_facebook.tsv', sep = '\t')
pf <- read.csv('../Downloads/pseudo_facebook.tsv', sep = '\t')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
pf <- read.csv('../Downloads/pseudo_facebook.tsv', sep = '\t')
knitr::opts_chunk$set(echo = TRUE)
install.packages('car',dependencies=TRUE)
install.packages('alr3',dependencies=TRUE)
install.packages('nlme')
library(alr3)
library(cars)
library(alr3)
library(car)
data(Mitchell)
ggplot(aes(x=temp, y=month), data = Mitchell)+
geom_point()
library(alr3)
library(car)
library(ggplot2)
data(Mitchell)
ggplot(aes(x=temp, y=month), data = Mitchell)+
geom_point()
library(alr3)
library(car)
library(ggplot2)
pf = data(Mitchell)
ggplot(aes(x=pf$temp, y=pf$month), data = pf)+
geom_point()
Mitchell
ggplot(data = Mitchell, aes(x = Month, y = Temp))+
geom_point()
ggplot(data = Mitchell, aes(x = Month, y = Temp))+
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
range(Mitchell$Month)
ggplot(data = Mitchell, aes(x = Month, y = Temp))+
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
pf$age_with_months <- pf$age + (12 + pf$dob_month)/12
pf$age_with_months <- (pf$age + (12 + pf$dob_month)/12)
pf$age_with_months <- (pf$age + (12 + pf$dob_month)/12)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x=price, data=diamonds, binwidth = 1000)
summary(diamonds$price)
length(which(diamonds$price >= 15000))
qplot(x=price, data=diamonds, binwidth = 1, xlim = c(250, 2000))
qplot(x=price, data=diamonds, binwidth = 1, xlim = c(250, 1000))
qplot(x=price, data=diamonds) +
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, min)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, median)
qplot(x=price/carat, data=diamonds) +
facet_wrap(~cut)
qplot (x=cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 7000))
qplot (x=color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 8000))
by(diamonds$price, diamonds$color, summary)
by(diamonds$price, diamonds$color, IQR)
qplot (x=clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 6500))
qplot (x=color, y = price/carat,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(2400, 5800))
table(diamonds$carat)
#carat, data=diamonds)
plot(pressure)
ggplot(aes(x=diamonds$price y=diamonds$x), data = diamonds) +
ggplot(aes(x=diamonds$price y=diamonds$x), data = diamonds) +
ggplot(aes(x=diamonds$price, y=diamonds$x), data = diamonds) +
geom_scatter()
ggplot(aes(x=diamonds$price, y=diamonds$x), data = diamonds) +
geom_plot()
ggplot(aes(x=diamonds$price, y=diamonds$x), data = diamonds) +
geom_dotplot()
ggplot(aes(x=diamonds$price, y=diamonds$x), data = diamonds) +
geom_point()
cor.test(x=diamonds$price, y=diamonds$x, method = 'pearson')
cor.test(x=diamonds$price, y=diamonds$x, method = 'pearson')
cor.test(x=diamonds$price, y=diamonds$y, method = 'pearson')
cor.test(x=diamonds$price, y=diamonds$z, method = 'pearson')
ggplot(aes(x=diamonds$price, y=diamonds$depth), data = diamonds) +
geom_point()
cor.test(x=diamonds$price, y=diamonds$depth, method = 'pearson')
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point()
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point() +
ylim(0, quantile(price, ,.90))
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point() +
ylim(0, quantile(diamonds$price, ,.90))
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point() +
ylim(0, quantile(diamonds$price, .90))
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point()
diamonds$volume <- (diamonds$x * diamonds$y * diamonds$z)
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point() +
ylim(0, quantile(diamonds$price, .90))
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point()
corr.test(diamonds$volume, diamonds$price)
corr.test(x=diamonds$volume, y=diamonds$price)
cor.test(x=diamonds$volume, y=diamonds$price)
diamonds_subset <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
diamonds_subset <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
diamonds_subset <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
ggplot(aes(x=price, y = volume), data = diamonds_subset) +
geom_point()
diamonds_subset <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
ggplot(aes(x=price, y = volume), data = diamonds_subset) +
geom_point(alpha = .01)
diamonds_subset <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
ggplot(aes(x=price, y = volume), data = diamonds_subset) +
geom_point(alpha = .1)
diamonds_subset <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
ggplot(aes(x=price, y = volume), data = diamonds_subset) +
geom_point(alpha = .1)
ggplot(aes(x=price, y = volume), data = diamonds_subset) +
geom_point(alpha = .1) +
stat_smooth(method ='lm')
diamonds_by_clarity <- data.frame(mean_price=numeric(),
median_price=numeric(), min_price=numberic(), max_price=numeric(), n=numeric())
diamonds_by_clarity <- data.frame(mean_price=numeric(),
median_price=numeric(), min_price=numeric(), max_price=numeric(), n=numeric())
diamonds_by_clarity$mean_price <- summarise(diamonds, mean_price = mean(price))
diamonds_by_clarity
diamonds.diamonds_by_clarity <- diamonds %.%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price) ,
max_price = max(price), n=n()) %.%
diamonds.diamonds_by_clarity <- diamonds %.%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price) ,
max_price = max(price), n=n())
diamonds.diamonds_by_clarity <- diamonds %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price) ,
max_price = max(price), n=n())
diamonds_by_clarity
library(dplyr)
library(dplyr)
diamonds.diamonds_by_clarity <- diamonds %>%
summarise(mean_price = mean(price), median_price = median(price), min_price = min(price) ,
max_price = max(price), n=n())
diamonds_by_clarity
diamonds.diamonds_by_clarity <- diamonds %>%
summarise(mean_price = mean(diamonds$price), median_price = median(diamonds$price), min_price = min(diamonds$price), max_price = max(diamonds$price), n=n()) %>%
diamonds.diamonds_by_clarity <- diamonds %>%
summarise(mean_price = mean(diamonds$price), median_price = median(diamonds$price), min_price = min(diamonds$price), max_price = max(diamonds$price), n=n())
diamonds.diamonds_by_clarity
data(diamonds)
library(dplyr)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
diamonds_by_clarity
diamonds_mp_by_clarity
diamonds.diamonds_by_clarity <- diamonds %>%
group_by(diamonds$clarity) %>%
summarise(mean_price = mean(diamonds$price), median_price = median(diamonds$price), min_price = min(diamonds$price), max_price = max(diamonds$price), n=n())
diamonds.diamonds_by_clarity
ggplot(aes(x=clarity, y=mean_price), data = diamonds_mp_by_clarity) +
geom_bar()
pf.fc_by_age_months <- pf %.%
group_by(age_with_months) %.%
summaris(friend_count_mean = mean(friend_count), friend_count_median = median(friend_count), n = n()) %.%
arrange(age_with_months)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#chain functions together
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age.gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
#chain functions together
pf.fc_by_age_gender <- pf %>%
#filter(!is.na(gender)) %>%
group_by(age.gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
#filter(!is.na(gender)) %>%
group_by(age.gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
filter_(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
#filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %.%
#filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
#filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
library(dplyr)
#chain functions together
pf.fc_by_age_gender_udacity <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x=price, data=diamonds, binwidth = 1000)
summary(diamonds$price)
length(which(diamonds$price >= 15000))
qplot(x=price, data=diamonds, binwidth = 1, xlim = c(250, 2000))
qplot(x=price, data=diamonds, binwidth = 1, xlim = c(250, 1000))
qplot(x=price, data=diamonds) +
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, min)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, median)
qplot(x=price/carat, data=diamonds) +
facet_wrap(~cut)
qplot (x=cut, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 7000))
qplot (x=color, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 8000))
by(diamonds$price, diamonds$color, summary)
by(diamonds$price, diamonds$color, IQR)
qplot (x=clarity, y = price,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 6500))
qplot (x=color, y = price/carat,
data = diamonds,
geom = 'boxplot') +
coord_cartesian(ylim = c(2400, 5800))
table(diamonds$carat)
#carat, data=diamonds)
ggplot(aes(x=diamonds$price, y=diamonds$x), data = diamonds) +
geom_point()
cor.test(x=diamonds$price, y=diamonds$x, method = 'pearson')
cor.test(x=diamonds$price, y=diamonds$y, method = 'pearson')
cor.test(x=diamonds$price, y=diamonds$z, method = 'pearson')
ggplot(aes(x=diamonds$price, y=diamonds$depth), data = diamonds) +
geom_point()
cor.test(x=diamonds$price, y=diamonds$depth, method = 'pearson')
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point()
ggplot(aes(x=carat, y=price), data=diamonds) +
geom_point() +
ylim(0, quantile(diamonds$price, .90))
diamonds$volume <- (diamonds$x * diamonds$y * diamonds$z)
ggplot(aes(x=volume, y=price), data=diamonds) +
geom_point()
cor.test(x=diamonds$volume, y=diamonds$price)
diamonds_subset <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
ggplot(aes(x=price, y = volume), data = diamonds_subset) +
geom_point(alpha = .1) +
stat_smooth(method ='lm')
library(dplyr)
diamonds.diamonds_by_clarity <- diamonds %>%
group_by(diamonds$clarity) %>%
summarise(mean_price = mean(diamonds$price), median_price = median(diamonds$price), min_price = min(diamonds$price), max_price = max(diamonds$price), n=n())
diamonds.diamonds_by_clarity
data(diamonds)
library(dplyr)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
ggplot(aes(x=clarity, y=mean_price), data = diamonds_mp_by_clarity) +
geom_bar()
knitr::opts_chunk$set(echo = TRUE)
getwd()
pf <- read.csv('../../../Downloads/pseudo_facebook.tsv', sep = '\t')
library(ggplot2)
library(dplyr)
ggplot(aes(x=age, y=friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x=age, y=friendships_initiated), data = pf) +
geom_jitter(alpha = 1/10, position = position_jitter(h=0)) +
coord_trans(y = 'sqrt')
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarize(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age)
head(pf.fc_by_age)
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarize(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age)
names(pf)
ggplot(aes(x=age, y=friend_count_mean), data=pf.fc_by_age) +
geom_line()
ggplot(aes(x=age, y=friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = .05,
position = position_jitter(h=0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1), linetype = 2, color = 'red') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9), linetype = 2, color = 'red')
cor.test(x=pf$age, y=pf$friend_count, method = 'pearson')
ggplot(aes(x=www_likes_received, y=likes_received), data = pf) +
geom_point() +
ylim(0, quantile(pf$likes_received, .95)) +
xlim(0, quantile(pf$www_likes_received, .95)) +
geom_smooth(method = 'lm', color = 'red')
cor.test(x=pf$www_likes_received, y=pf$likes_received, method = 'pearson')
pf$age_with_months <- (pf$age + (12 + pf$dob_month)/12)
pf.fc_by_age_months <- pf %.%
group_by(age_with_months) %.%
summaris(friend_count_mean = mean(friend_count), friend_count_median = median(friend_count), n = n()) %.%
arrange(age_with_months)
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender, age ~ gender, value.var = 'median_friend_count')
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender_udacity.wide <- dcast(pf.fc_by_age_gender, age ~ gender, value.var = 'median_friend_count')
install.packages("reshape2")
library('ggplot2')
data(diamonds)
ggplot(aes(y=price, x=weight), data=diamonds) +
geom_point()
library('ggplot2')
pf = data(diamonds)
pf.names()
name(pf)
pf
ggplot(aes(y=price, x=carat), data=pf) +
geom_point()
pf.names
summary(pf)
library('ggplot2')
data(diamonds)
summary(data)
summary(data)
summary(diamonds)
ggplot(aes(y=diamonds$price, x=diamonds$carat), data=pf) +
geom_point()
ggplot(aes(x=diamonds$price, y=diamonds$x), data = diamonds) +
geom_point()
ggplot(aes(x=diamonds$price, y=diamonds$carat), data = diamonds) +
geom_point()
ggplot(aes(x=diamonds$price, y=diamonds$carat), data = diamonds) +
xlim= c(0, quantile(diamonds$carat, .99)) +
ylim= c(0, quantile(diamonds$carat, .99))
ggplot(aes(x=diamonds$price, y=diamonds$carat), data = diamonds) +
xlim= c(0, quantile(diamonds$carat, .99)) +
ylim= c(0, quantile(diamonds$carat, .99)))
ggplot(aes(x=diamonds$price, y=diamonds$carat), data = diamonds) +
xlim= c(0, quantile(diamonds$carat, .99)) +
ylim= c(0, quantile(diamonds$carat, .99))) +
ggplot(aes(x=diamonds$price, y=diamonds$carat), data = diamonds) +
xlim= c(0, quantile(diamonds$carat, .99)) +
ylim= c(0, quantile(diamonds$carat, .99)) +
geom_point()
ggplot(aes(x=diamonds$price, y=diamonds$carat), data = diamonds) +
xlim= c(0, quantile(diamonds$carat, .99)) +
ylim= c(0, quantile(diamonds$price, .99)) +
geom_point()
# install these if necessary
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages('car')
install.packages('reshape')
install.packages('plyr')
# load the ggplot graphics package and the others
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# sample 10,000 diamonds from the data set
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
install.packages("plyr")
install.packages("scales")
